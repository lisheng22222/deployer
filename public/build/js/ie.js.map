{"version":3,"sources":["html5shiv.js","respond.src.js"],"names":[],"mappingstfile":"ie.js","sourcesContent":["/**\n* @preserve HTML5 Shiv 3.7.3 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n*/\n;(function(window, document) {\n/*jshint evil:true */\n  /** version */\n  var version = '3.7.3-pre';\n\n  /** Preset options */\n  var options = window.html5 || {};\n\n  /** Used to skip problem elements */\n  var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n  /** Not all elements can be cloned in IE **/\n  var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n  /** Detect whether the browser supports default html5 styles */\n  var supportsHtml5Styles;\n\n  /** Name of the expando, to work with multiple documents or to re-shiv one document */\n  var expando = '_html5shiv';\n\n  /** The id for the the documents expando */\n  var expanID = 0;\n\n  /** Cached data for each document */\n  var expandoData = {};\n\n  /** Detect whether the browser supports unknown elements */\n  var supportsUnknownElements;\n\n  (function() {\n    try {\n        var a = document.createElement('a');\n        a.innerHTML = '<xyz></xyz>';\n        //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n        supportsHtml5Styles = ('hidden' in a);\n\n        supportsUnknownElements = a.childNodes.length == 1 || (function() {\n          // assign a false positive if unable to shiv\n          (document.createElement)('a');\n          var frag = document.createDocumentFragment();\n          return (\n            typeof frag.cloneNode == 'undefined' ||\n            typeof frag.createDocumentFragment == 'undefined' ||\n            typeof frag.createElement == 'undefined'\n          );\n        }());\n    } catch(e) {\n      // assign a false positive if detection fails => unable to shiv\n      supportsHtml5Styles = true;\n      supportsUnknownElements = true;\n    }\n\n  }());\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a style sheet with the given CSS text and adds it to the document.\n   * @private\n   * @param {Document} ownerDocument The document.\n   * @param {String} cssText The CSS text.\n   * @returns {StyleSheet} The style element.\n   */\n  function addStyleSheet(ownerDocument, cssText) {\n    var p = ownerDocument.createElement('p'),\n        parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n    p.innerHTML = 'x<style>' + cssText + '</style>';\n    return parent.insertBefore(p.lastChild, parent.firstChild);\n  }\n\n  /**\n   * Returns the value of `html5.elements` as an array.\n   * @private\n   * @returns {Array} An array of shived element node names.\n   */\n  function getElements() {\n    var elements = html5.elements;\n    return typeof elements == 'string' ? elements.split(' ') : elements;\n  }\n\n  /**\n   * Extends the built-in list of html5 elements\n   * @memberOf html5\n   * @param {String|Array} newElements whitespace separated list or array of new element names to shiv\n   * @param {Document} ownerDocument The context document.\n   */\n  function addElements(newElements, ownerDocument) {\n    var elements = html5.elements;\n    if(typeof elements != 'string'){\n      elements = elements.join(' ');\n    }\n    if(typeof newElements != 'string'){\n      newElements = newElements.join(' ');\n    }\n    html5.elements = elements +' '+ newElements;\n    shivDocument(ownerDocument);\n  }\n\n   /**\n   * Returns the data associated to the given document\n   * @private\n   * @param {Document} ownerDocument The document.\n   * @returns {Object} An object of data.\n   */\n  function getExpandoData(ownerDocument) {\n    var data = expandoData[ownerDocument[expando]];\n    if (!data) {\n        data = {};\n        expanID++;\n        ownerDocument[expando] = expanID;\n        expandoData[expanID] = data;\n    }\n    return data;\n  }\n\n  /**\n   * returns a shived element for the given nodeName and document\n   * @memberOf html5\n   * @param {String} nodeName name of the element\n   * @param {Document} ownerDocument The context document.\n   * @returns {Object} The shived element.\n   */\n  function createElement(nodeName, ownerDocument, data){\n    if (!ownerDocument) {\n        ownerDocument = document;\n    }\n    if(supportsUnknownElements){\n        return ownerDocument.createElement(nodeName);\n    }\n    if (!data) {\n        data = getExpandoData(ownerDocument);\n    }\n    var node;\n\n    if (data.cache[nodeName]) {\n        node = data.cache[nodeName].cloneNode();\n    } else if (saveClones.test(nodeName)) {\n        node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n    } else {\n        node = data.createElem(nodeName);\n    }\n\n    // Avoid adding some elements to fragments in IE < 9 because\n    // * Attributes like `name` or `type` cannot be set/changed once an element\n    //   is inserted into a document/fragment\n    // * Link elements with `src` attributes that are inaccessible, as with\n    //   a 403 response, will cause the tab/window to crash\n    // * Script elements appended to fragments will execute when their `src`\n    //   or `text` property is set\n    return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n  }\n\n  /**\n   * returns a shived DocumentFragment for the given document\n   * @memberOf html5\n   * @param {Document} ownerDocument The context document.\n   * @returns {Object} The shived DocumentFragment.\n   */\n  function createDocumentFragment(ownerDocument, data){\n    if (!ownerDocument) {\n        ownerDocument = document;\n    }\n    if(supportsUnknownElements){\n        return ownerDocument.createDocumentFragment();\n    }\n    data = data || getExpandoData(ownerDocument);\n    var clone = data.frag.cloneNode(),\n        i = 0,\n        elems = getElements(),\n        l = elems.length;\n    for(;i<l;i++){\n        clone.createElement(elems[i]);\n    }\n    return clone;\n  }\n\n  /**\n   * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n   * @private\n   * @param {Document|DocumentFragment} ownerDocument The document.\n   * @param {Object} data of the document.\n   */\n  function shivMethods(ownerDocument, data) {\n    if (!data.cache) {\n        data.cache = {};\n        data.createElem = ownerDocument.createElement;\n        data.createFrag = ownerDocument.createDocumentFragment;\n        data.frag = data.createFrag();\n    }\n\n\n    ownerDocument.createElement = function(nodeName) {\n      //abort shiv\n      if (!html5.shivMethods) {\n          return data.createElem(nodeName);\n      }\n      return createElement(nodeName, ownerDocument, data);\n    };\n\n    ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n      'var n=f.cloneNode(),c=n.createElement;' +\n      'h.shivMethods&&(' +\n        // unroll the `createElement` calls\n        getElements().join().replace(/[\\w\\-:]+/g, function(nodeName) {\n          data.createElem(nodeName);\n          data.frag.createElement(nodeName);\n          return 'c(\"' + nodeName + '\")';\n        }) +\n      ');return n}'\n    )(html5, data.frag);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Shivs the given document.\n   * @memberOf html5\n   * @param {Document} ownerDocument The document to shiv.\n   * @returns {Document} The shived document.\n   */\n  function shivDocument(ownerDocument) {\n    if (!ownerDocument) {\n        ownerDocument = document;\n    }\n    var data = getExpandoData(ownerDocument);\n\n    if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n      data.hasCSS = !!addStyleSheet(ownerDocument,\n        // corrects block display not defined in IE6/7/8/9\n        'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n        // adds styling not present in IE6/7/8/9\n        'mark{background:#FF0;color:#000}' +\n        // hides non-rendered elements\n        'template{display:none}'\n      );\n    }\n    if (!supportsUnknownElements) {\n      shivMethods(ownerDocument, data);\n    }\n    return ownerDocument;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The `html5` object is exposed so that more elements can be shived and\n   * existing shiving can be detected on iframes.\n   * @type Object\n   * @example\n   *\n   * // options can be changed before the script is included\n   * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n   */\n  var html5 = {\n\n    /**\n     * An array or space separated string of node names of the elements to shiv.\n     * @memberOf html5\n     * @type Array|String\n     */\n    'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video',\n\n    /**\n     * current version of html5shiv\n     */\n    'version': version,\n\n    /**\n     * A flag to indicate that the HTML5 style sheet should be inserted.\n     * @memberOf html5\n     * @type Boolean\n     */\n    'shivCSS': (options.shivCSS !== false),\n\n    /**\n     * Is equal to true if a browser supports creating unknown/HTML5 elements\n     * @memberOf html5\n     * @type boolean\n     */\n    'supportsUnknownElements': supportsUnknownElements,\n\n    /**\n     * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n     * methods should be overwritten.\n     * @memberOf html5\n     * @type Boolean\n     */\n    'shivMethods': (options.shivMethods !== false),\n\n    /**\n     * A string to describe the type of `html5` object (\"default\" or \"default print\").\n     * @memberOf html5\n     * @type String\n     */\n    'type': 'default',\n\n    // shivs the document according to the specified `html5` object options\n    'shivDocument': shivDocument,\n\n    //creates a shived element\n    createElement: createElement,\n\n    //creates a shived documentFragment\n    createDocumentFragment: createDocumentFragment,\n\n    //extends list of elements\n    addElements: addElements\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose html5\n  window.html5 = html5;\n\n  // shiv the document\n  shivDocument(document);\n\n  if(typeof module == 'object' && module.exports){\n    module.exports = html5;\n  }\n\n}(typeof window !== \"undefined\" ? window : this, document));\n","/*! Respond.js v1.4.2: min/max-width media query polyfill\r\n * Copyright 2014 Scott Jehl\r\n * Licensed under MIT\r\n * http://j.mp/respondjs */\r\n\r\n/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */\r\n/*! NOTE: If you're already including a window.matchMedia polyfill via Modernizr or otherwise, you don't need this part */\r\n(function(w) {\r\n  \"use strict\";\r\n  w.matchMedia = w.matchMedia || function(doc, undefined) {\r\n    var bool, docElem = doc.documentElement, refNode = docElem.firstElementChild || docElem.firstChild, fakeBody = doc.createElement(\"body\"), div = doc.createElement(\"div\");\r\n    div.id = \"mq-test-1\";\r\n    div.style.cssText = \"position:absolute;top:-100em\";\r\n    fakeBody.style.background = \"none\";\r\n    fakeBody.appendChild(div);\r\n    return function(q) {\r\n      div.innerHTML = '&shy;<style media=\"' + q + '\"> #mq-test-1 { width: 42px; }</style>';\r\n      docElem.insertBefore(fakeBody, refNode);\r\n      bool = div.offsetWidth === 42;\r\n      docElem.removeChild(fakeBody);\r\n      return {\r\n        matches: bool,\r\n        media: q\r\n      };\r\n    };\r\n  }(w.document);\r\n})(this);\r\n\r\n(function(w) {\r\n  \"use strict\";\r\n  var respond = {};\r\n  w.respond = respond;\r\n  respond.update = function() {};\r\n  var requestQueue = [], xmlHttp = function() {\r\n    var xmlhttpmethod = false;\r\n    try {\r\n      xmlhttpmethod = new w.XMLHttpRequest();\r\n    } catch (e) {\r\n      xmlhttpmethod = new w.ActiveXObject(\"Microsoft.XMLHTTP\");\r\n    }\r\n    return function() {\r\n      return xmlhttpmethod;\r\n    };\r\n  }(), ajax = function(url, callback) {\r\n    var req = xmlHttp();\r\n    if (!req) {\r\n      return;\r\n    }\r\n    req.open(\"GET\", url, true);\r\n    req.onreadystatechange = function() {\r\n      if (req.readyState !== 4 || req.status !== 200 && req.status !== 304) {\r\n        return;\r\n      }\r\n      callback(req.responseText);\r\n    };\r\n    if (req.readyState === 4) {\r\n      return;\r\n    }\r\n    req.send(null);\r\n  }, isUnsupportedMediaQuery = function(query) {\r\n    return query.replace(respond.regex.minmaxwh, \"\").match(respond.regex.other);\r\n  };\r\n  respond.ajax = ajax;\r\n  respond.queue = requestQueue;\r\n  respond.unsupportedmq = isUnsupportedMediaQuery;\r\n  respond.regex = {\r\n    media: /@media[^\\{]+\\{([^\\{\\}]*\\{[^\\}\\{]*\\})+/gi,\r\n    keyframes: /@(?:\\-(?:o|moz|webkit)\\-)?keyframes[^\\{]+\\{(?:[^\\{\\}]*\\{[^\\}\\{]*\\})+[^\\}]*\\}/gi,\r\n    comments: /\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//gi,\r\n    urls: /(url\\()['\"]?([^\\/\\)'\"][^:\\)'\"]+)['\"]?(\\))/g,\r\n    findStyles: /@media *([^\\{]+)\\{([\\S\\s]+?)$/,\r\n    only: /(only\\s+)?([a-zA-Z]+)\\s?/,\r\n    minw: /\\(\\s*min\\-width\\s*:\\s*(\\s*[0-9\\.]+)(px|em)\\s*\\)/,\r\n    maxw: /\\(\\s*max\\-width\\s*:\\s*(\\s*[0-9\\.]+)(px|em)\\s*\\)/,\r\n    minmaxwh: /\\(\\s*m(in|ax)\\-(height|width)\\s*:\\s*(\\s*[0-9\\.]+)(px|em)\\s*\\)/gi,\r\n    other: /\\([^\\)]*\\)/g\r\n  };\r\n  respond.mediaQueriesSupported = w.matchMedia && w.matchMedia(\"only all\") !== null && w.matchMedia(\"only all\").matches;\r\n  if (respond.mediaQueriesSupported) {\r\n    return;\r\n  }\r\n  var doc = w.document, docElem = doc.documentElement, mediastyles = [], rules = [], appendedEls = [], parsedSheets = {}, resizeThrottle = 30, head = doc.getElementsByTagName(\"head\")[0] || docElem, base = doc.getElementsByTagName(\"base\")[0], links = head.getElementsByTagName(\"link\"), lastCall, resizeDefer, eminpx, getEmValue = function() {\r\n    var ret, div = doc.createElement(\"div\"), body = doc.body, originalHTMLFontSize = docElem.style.fontSize, originalBodyFontSize = body && body.style.fontSize, fakeUsed = false;\r\n    div.style.cssText = \"position:absolute;font-size:1em;width:1em\";\r\n    if (!body) {\r\n      body = fakeUsed = doc.createElement(\"body\");\r\n      body.style.background = \"none\";\r\n    }\r\n    docElem.style.fontSize = \"100%\";\r\n    body.style.fontSize = \"100%\";\r\n    body.appendChild(div);\r\n    if (fakeUsed) {\r\n      docElem.insertBefore(body, docElem.firstChild);\r\n    }\r\n    ret = div.offsetWidth;\r\n    if (fakeUsed) {\r\n      docElem.removeChild(body);\r\n    } else {\r\n      body.removeChild(div);\r\n    }\r\n    docElem.style.fontSize = originalHTMLFontSize;\r\n    if (originalBodyFontSize) {\r\n      body.style.fontSize = originalBodyFontSize;\r\n    }\r\n    ret = eminpx = parseFloat(ret);\r\n    return ret;\r\n  }, applyMedia = function(fromResize) {\r\n    var name = \"clientWidth\", docElemProp = docElem[name], currWidth = doc.compatMode === \"CSS1Compat\" && docElemProp || doc.body[name] || docElemProp, styleBlocks = {}, lastLink = links[links.length - 1], now = new Date().getTime();\r\n    if (fromResize && lastCall && now - lastCall < resizeThrottle) {\r\n      w.clearTimeout(resizeDefer);\r\n      resizeDefer = w.setTimeout(applyMedia, resizeThrottle);\r\n      return;\r\n    } else {\r\n      lastCall = now;\r\n    }\r\n    for (var i in mediastyles) {\r\n      if (mediastyles.hasOwnProperty(i)) {\r\n        var thisstyle = mediastyles[i], min = thisstyle.minw, max = thisstyle.maxw, minnull = min === null, maxnull = max === null, em = \"em\";\r\n        if (!!min) {\r\n          min = parseFloat(min) * (min.indexOf(em) > -1 ? eminpx || getEmValue() : 1);\r\n        }\r\n        if (!!max) {\r\n          max = parseFloat(max) * (max.indexOf(em) > -1 ? eminpx || getEmValue() : 1);\r\n        }\r\n        if (!thisstyle.hasquery || (!minnull || !maxnull) && (minnull || currWidth >= min) && (maxnull || currWidth <= max)) {\r\n          if (!styleBlocks[thisstyle.media]) {\r\n            styleBlocks[thisstyle.media] = [];\r\n          }\r\n          styleBlocks[thisstyle.media].push(rules[thisstyle.rules]);\r\n        }\r\n      }\r\n    }\r\n    for (var j in appendedEls) {\r\n      if (appendedEls.hasOwnProperty(j)) {\r\n        if (appendedEls[j] && appendedEls[j].parentNode === head) {\r\n          head.removeChild(appendedEls[j]);\r\n        }\r\n      }\r\n    }\r\n    appendedEls.length = 0;\r\n    for (var k in styleBlocks) {\r\n      if (styleBlocks.hasOwnProperty(k)) {\r\n        var ss = doc.createElement(\"style\"), css = styleBlocks[k].join(\"\\n\");\r\n        ss.type = \"text/css\";\r\n        ss.media = k;\r\n        head.insertBefore(ss, lastLink.nextSibling);\r\n        if (ss.styleSheet) {\r\n          ss.styleSheet.cssText = css;\r\n        } else {\r\n          ss.appendChild(doc.createTextNode(css));\r\n        }\r\n        appendedEls.push(ss);\r\n      }\r\n    }\r\n  }, translate = function(styles, href, media) {\r\n    var qs = styles.replace(respond.regex.comments, \"\").replace(respond.regex.keyframes, \"\").match(respond.regex.media), ql = qs && qs.length || 0;\r\n    href = href.substring(0, href.lastIndexOf(\"/\"));\r\n    var repUrls = function(css) {\r\n      return css.replace(respond.regex.urls, \"$1\" + href + \"$2$3\");\r\n    }, useMedia = !ql && media;\r\n    if (href.length) {\r\n      href += \"/\";\r\n    }\r\n    if (useMedia) {\r\n      ql = 1;\r\n    }\r\n    for (var i = 0; i < ql; i++) {\r\n      var fullq, thisq, eachq, eql;\r\n      if (useMedia) {\r\n        fullq = media;\r\n        rules.push(repUrls(styles));\r\n      } else {\r\n        fullq = qs[i].match(respond.regex.findStyles) && RegExp.$1;\r\n        rules.push(RegExp.$2 && repUrls(RegExp.$2));\r\n      }\r\n      eachq = fullq.split(\",\");\r\n      eql = eachq.length;\r\n      for (var j = 0; j < eql; j++) {\r\n        thisq = eachq[j];\r\n        if (isUnsupportedMediaQuery(thisq)) {\r\n          continue;\r\n        }\r\n        mediastyles.push({\r\n          media: thisq.split(\"(\")[0].match(respond.regex.only) && RegExp.$2 || \"all\",\r\n          rules: rules.length - 1,\r\n          hasquery: thisq.indexOf(\"(\") > -1,\r\n          minw: thisq.match(respond.regex.minw) && parseFloat(RegExp.$1) + (RegExp.$2 || \"\"),\r\n          maxw: thisq.match(respond.regex.maxw) && parseFloat(RegExp.$1) + (RegExp.$2 || \"\")\r\n        });\r\n      }\r\n    }\r\n    applyMedia();\r\n  }, makeRequests = function() {\r\n    if (requestQueue.length) {\r\n      var thisRequest = requestQueue.shift();\r\n      ajax(thisRequest.href, function(styles) {\r\n        translate(styles, thisRequest.href, thisRequest.media);\r\n        parsedSheets[thisRequest.href] = true;\r\n        w.setTimeout(function() {\r\n          makeRequests();\r\n        }, 0);\r\n      });\r\n    }\r\n  }, ripCSS = function() {\r\n    for (var i = 0; i < links.length; i++) {\r\n      var sheet = links[i], href = sheet.href, media = sheet.media, isCSS = sheet.rel && sheet.rel.toLowerCase() === \"stylesheet\";\r\n      if (!!href && isCSS && !parsedSheets[href]) {\r\n        if (sheet.styleSheet && sheet.styleSheet.rawCssText) {\r\n          translate(sheet.styleSheet.rawCssText, href, media);\r\n          parsedSheets[href] = true;\r\n        } else {\r\n          if (!/^([a-zA-Z:]*\\/\\/)/.test(href) && !base || href.replace(RegExp.$1, \"\").split(\"/\")[0] === w.location.host) {\r\n            if (href.substring(0, 2) === \"//\") {\r\n              href = w.location.protocol + href;\r\n            }\r\n            requestQueue.push({\r\n              href: href,\r\n              media: media\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    makeRequests();\r\n  };\r\n  ripCSS();\r\n  respond.update = ripCSS;\r\n  respond.getEmValue = getEmValue;\r\n  function callMedia() {\r\n    applyMedia(true);\r\n  }\r\n  if (w.addEventListener) {\r\n    w.addEventListener(\"resize\", callMedia, false);\r\n  } else if (w.attachEvent) {\r\n    w.attachEvent(\"onresize\", callMedia);\r\n  }\r\n})(this);"]}